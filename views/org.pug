extends layout

block head
    link(rel='stylesheet', href='/stylesheets/random.css')

block content
    h1 welcome to org 
    hr

    div(ng-controller="MainCtrl" class="container-fluid")
        h1 Table
        div(class="row")
            div(id="table_todo")

        hr

        h1 Graph  
        div(class="row")
            div(id="calendar_workout")
        div.row
            div(id="calendar_pomodora")



block js
    script(type='text/javascript').
        $(document).ready(function() { //when the documents reday 
            google.charts.load("current", {packages:["calendar", "table"]});
            google.charts.setOnLoadCallback(drawChart);

            function drawChart() {

                drawTable();

                $.get( "/org/refresh/exercise", function( data ) {
                    // alert( "Load was performed." );
                    
                    var dataTable = new google.visualization.DataTable();
                    dataTable.addColumn({ type: 'date', id: 'Date' });
                    dataTable.addColumn({ type: 'number', id: 'Won/Loss' });

                    for (var i = 0; i < data.data.length; i++) {
                        var row = [
                            toLocalDate(data.data[i][0]),
                            data.data[i][1]
                        ];
                        dataTable.addRow(row);
                    }                    

                     var chart = new google.visualization.Calendar(document.    getElementById('calendar_workout'));

                     var options = {
                          title: "Workout statistics",
                          height: 250,
                          colorAxis : {
                            minValue : -1
                          }
                     };

                     chart.draw(dataTable, options);

                });

                $.get("/org/refresh/pomodora", function(data) {
                    var dataTable = new google.visualization.DataTable();
                    dataTable.addColumn({ type: 'date', id: 'Date' });
                    dataTable.addColumn({ type: 'number', id: 'Won/Loss' });

                    for (var i = 0; i < data.data.length; i++) {
                        var row = [
                            toLocalDate(data.data[i][0]),
                            data.data[i][1]
                        ];
                        dataTable.addRow(row);
                    }                    

                     var chart = new google.visualization.Calendar(document.    getElementById('calendar_pomodora'));

                     var options = {
                          title: "Pomodora statistics",
                          height: 250,
                          colorAxis : {
                            minValue : -1
                          }
                     };

                     chart.draw(dataTable, options);

                });



                function drawTable() {
                    $.get('/org/refresh/agenda', function(data){
                        var dataTable = new google.visualization.DataTable();
                        dataTable.addColumn('string', 'Category');
                        dataTable.addColumn('string', 'Name');
                        dataTable.addColumn('string', 'State');
                        dataTable.addColumn('string', 'Tag');
                        dataTable.addColumn('date', 'Scheduled');
                        dataTable.addColumn('string', 'Priority');
                        
                        
                        for (var i = 0; i < data.data.length; i++) {
                            var r = data.data[i];
                            //($category,$head,$type,$todo,$tags,$date,$time,$extra, $priority_l,$priority_n)
                            if(r.type == 'todo'){
                                dataTable.addRow([
                                    r.category,
                                    r.head, 
                                    r.todo,
                                    r.tags,
                                    toLocalDate(r.date),
                                    r.priority_l
                                ]);
                            }
                        }

                        var table = new google.visualization.Table(document.getElementById('table_todo'));

                        table.draw(dataTable, {title: 'TODO', showRowNumber: false});
                    });

                }

            }
        });

        function toLocalDate(dateStr) {
            if (dateStr == '') return null;
            var tmp_date = new Date(dateStr);
            return new Date(tmp_date.getUTCFullYear(), 
                            tmp_date.getUTCMonth(),
                            tmp_date.getUTCDate());
        }